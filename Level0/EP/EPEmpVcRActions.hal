external procedure NextM4Number(string,var string);
external function boolean IsNumeric(string);

global
function LongInt EPEmpVcRecordDefaultsClient(longint wn,var record EPEmpVc EPEmpr,record EPEmpVc EPEmp2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;
  //integer wn,nwn;
  integer nwn;

  res = 0;
  //wn = CurWindow;
  
  //nwn = 2;//MotherWindow(wn);
  //ar motherwindow nestraadaa, dod neko
  //stopalert(wn & " asdf " & GetWindowClass(wn) & " asfd " & nwn & ";" & GetWindowClass(nwn));
  
  switch GetWindowClass(wn) begin
    case "EPEmpDClass": EPEmpr.EmpTypeFlag = 1;
    case "EPCandEmpDClass": EPEmpr.Candidate = 1;
    case "EPPersonEmpDClass": EPEmpr.PersonTypeFlag = 1;
  end;

 //EPEmpr.EmpTypeFlag = 1;
  
  EPEmpVcRecordDefaultsClient = res;
  RETURN;
END;

global
function LongInt EPEmpVcRecordDefaults(var record EPEmpVc EPEmpr,record EPEmpVc EPEmp2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;
  record EPEmpVc tEPEmpr;
  Record EPStrSampleBlock Sampler;
  row EPStrSampleBlock Samplerw;
  integer i,ar;
  string 255 tstr;
  
  BlockLoad(Sampler);
  ar=MatRowCnt(Sampler);
  for (i=0;i<ar;i=i+1) begin
     MatRowGet(Sampler,i,Samplerw);
     MatRowPut(EPEmpr,i,Samplerw);
  end;
  
  EPEmpr.StartDate = CurrentDate;
  
  EPEmpr.Closed = 0;
  EPEmpr.ResidType = 1;
  EPEmpr.CitezenshipType = 0;
  //EPEmpr.EmpTypeFlag = 1;
  tEPEmpr.EmpCode = "Z";
  if (loopBackKey("EmpCode",tEPEmpr,1,true)) then begin
    EPEmpr.EmpCode = NextStrNumber(tEPEmpr.EmpCode,true);
  end else begin
    EPEmpr.EmpCode = "1";
  end;
  EPEmpVcRecordDefaults = res;
  RETURN;
END;

global
function LongInt EPEmpVcRecordDuplicate(var record EPEmpVc EPEmpr,record EPEmpVc EPEmp2r,LongInt stat,LongInt long4)
BEGIN
  record EPEMpVc tEPEmpr;
  LongInt res;
  
  
  EPEmpr.StartDate = CurrentDate;  
  EPEmpr.Closed = 0;

  tEPEmpr.EmpCode = "ZZZ";
  if (LoopBackKey("EmpCode",tEPEmpr,1,true)) then begin
    EPEmpr.EmpCode = NextStrNumber(tEPEmpr.EmpCode,true);
  end else begin
    EPEmpr.EmpCode = "1";
  end;

  EPEmpVcRecordDuplicate = res;
 
  RETURN;
END;

global
function longint EPEmpVcRecordCheck(var record EPEmpVc EPEmpr,record EPEmpVc EPEmpr2,longint a,longint b)
begin
  record EPPostVc EPPostr;
  record EPEmpVc tempEPEmpr;
  longint res;
  string 255 tstr;
  string 1 ch;
  integer pos,l;
  record EPPayrollSetBlock EPPayrollSetb;
  
  res = 0;
  BlockLoad(EPPayrollSetb);
  
  if (EPPayrollSetb.EnterTaxGroup==1 and blank(EPEmpr.TaxGroup)) then begin
    RecordCheckError(1058,"",-1,"TaxGroup");      
    res = -1;
    goto ErorCheckEnd;  
  end;
  if (blank(EPEmpr.EmpCode)) then begin
    RecordCheckError(1058,"",-1,"EmpCode");      
    res = -1;
    goto ErorCheckEnd;
  end;
  if (Blank(EPEmpr.PersonIDNr)) then begin
    RecordCheckError(1058,"",-1,"PersonIDNr");      
    res = -1;
    goto ErorCheckEnd;
  end;
 
  if nonblank(EPEmpr.RealPostCode) then begin
    EPPostr.PostCode = EPEmpr.RealPostCode;
  if readfirstmain(EPPostr,1,true)==false then begin
      RecordCheckError(1120,"",-1,"RealPostCode");      
      res = -1;
      goto ErorCheckEnd;      
  end;
  end;
  if nonblank(EPEmpr.OffPostCode) then begin
    EPPostr.PostCode = EPEmpr.OffPostCode;
    if readfirstmain(EPPostr,1,true)==false then begin
      RecordCheckError(1120,"",-1,"OffPostCode");      
      res = -1;
      goto ErorCheckEnd;      
    end;
  end;
  if EPEmpr.EmpTypeFlag==0 and EPEmpr.PersonTypeFlag==0 and EPEmpr.Candidate==0 Then Begin
    RecordCheckError(1524910,"",-1,"EmpCode");      
    res = -1;
    goto ErorCheckEnd;      
  End;
  TempEPEmpr.PersonIDNr= EPEmpr.PersonIDNr;
  if EPEmpr.ResidType==1 then begin
    if (InString(EPEmpr.PersonIDNr,"-")>0) then begin
      tstr= EPEmpr.PersonIDNr;
      l = len(tstr);
      if (l != 12) then begin
        RecordCheckError(1524452,"",-1,"PersonIDNr");      
        res = -1;
        goto ErorCheckEnd;      
      end;
      for (pos = 0; pos < l; pos = pos + 1) begin  
        ch = mid(tstr,pos,1);
        if (pos == 6) then begin
          if (ch != "-") then begin
            RecordCheckError(1524452,"",-1,"PersonIDNr");      
            res = -1;
            goto ErorCheckEnd;      
          end;
        end
        else begin
          if (ch < "0" or ch > "9") then begin
            RecordCheckError(1524452,"",-1,"PersonIDNr");      
            res = -1;
            goto ErorCheckEnd;          
          end;
        end;
      end;
    end else begin
      if (IsNumeric(EPEmpr.PersonIDNr)==false or len(EPEmpr.PersonIDNr)!=11) then begin
        RecordCheckError(1524452,"",-1,"PersonIDNr");      
        res = -1;
        goto ErorCheckEnd;          
      end;   
    end;
  end;
  while (loopKey("PersonIDNr",tempEPEmpr,1,true)) begin
    if (tempEPEmpr.PersonIDNr == EPEmpr.PersonIDNr and tempEPEmpr.EmpCode != EPEmpr.EmpCode) then begin
      RecordCheckError(1524451,"",-1,"PersonIDNr");      
      res = -1;
      goto ErorCheckEnd;
    end;
    if (TempEPEmpr.PersonIDNr != EPEmpr.PersonIDNr) then begin
      goto ErorCheckEnd;
    end;
  end;
  ErorCheckEnd:;
  EPEmpVcRecordCheck = res;
return;
end;


global
function longint EPEmpVcRecordRemoveTest(var record EPEmpVc EPEmpr,record EPEmpVc EPEmpr2,longint a,longint b)
begin
  record EPContractVc EPContractr;
  longint res;
  res = 1;
  EPContractr.EmpCode = EPEmpr.EmpCode;
  if Readfirstkey("EmpCode",EPContractr,1,true) Then Begin
    MessageBox(1524919,"");
    res = 0;
  End;
  EPEmpVcRecordRemoveTest = res;
return;
end;



global
function LongInt EPEmpVcRecordInIndex(record EPEmpVc EPEmpr,string indexname)
BEGIN
  LongInt res;
  res = 1;
  if (EPEmpr.Closed!=0) then begin 
    if (indexname=="ActEmpCode")  then begin res = 0; end;
    if (indexname=="ActName")  then begin res = 0; end;
    if (indexname=="ActGroup")  then begin res = 0; end;
    if (indexname=="ActDepCode")  then begin res = 0; end;
  end;

  if (EPEmpr.Closed!=0 or EPEmpr.EmpTypeFlag==0) then begin 
    if (indexname=="ActEmpEmpCode")  then begin res = 0; end;
    if (indexname=="ActEmpName")  then begin res = 0; end;
    if (indexname=="ActEmpGroup")  then begin res = 0; end;
    if (indexname=="ActEmpDepCode")  then begin res = 0; end;
  end;
  if (EPEmpr.Closed!=0 or EPEmpr.EmpTypeFlag==0) then begin 
    if (indexname=="EmpEmpCode")  then begin res = 0; end;
    if (indexname=="EmpName")  then begin res = 0; end;
    if (indexname=="EmpGroup")  then begin res = 0; end;
    if (indexname=="EmpDepCode")  then begin res = 0; end;
  end;  

  if (EPEmpr.Closed!=0 or EPEmpr.PersonTypeFlag==0) then begin 
    if (indexname=="ActPersonEmpCode")  then begin res = 0; end;
    if (indexname=="ActPersonName")  then begin res = 0; end;
    if (indexname=="ActPersonGroup")  then begin res = 0; end;
    if (indexname=="ActPersonDepCode")  then begin res = 0; end;
    //kzs
    if (indexname=="PersonEmpCode")  then begin res = 0; end;
    if (indexname=="PersonName")  then begin res = 0; end;
    if (indexname=="PersonGroup")  then begin res = 0; end;
    if (indexname=="PersonDepCode")  then begin res = 0; end;
  end;
  if (EPEmpr.Closed!=0 or EPEmpr.Candidate==0) then begin 
    if (indexname=="CandidateEmpCode")  then begin res = 0; end;
    if (indexname=="CandidateName")  then begin res = 0; end;
    if (indexname=="CandidateGroup")  then begin res = 0; end;
    if (indexname=="CandidateDepCode")  then begin res = 0; end;
  end;
  /*
  if (EPEmpr.Closed!=0 or EPEmpr.PersonTypeFlag==0) then begin 
    if (indexname=="PersonEmpCode")  then begin res = 0; end;
    if (indexname=="PersonName")  then begin res = 0; end;
    if (indexname=="PersonGroup")  then begin res = 0; end;
    if (indexname=="PersonDepCode")  then begin res = 0; end;
  end;
  */




EPEmpVcRecordInIndex = res;
  RETURN;
END;



global 
function longint EPEmpVcRecordImport(var record EPEmpVc EPEmpr,record EPEmpVc EPEmp2r,longint a,longint b)
begin
  integer rw,rwc;
  longint res;
  if EPEmpr.EmpTypeFlag==0 and EPEmpr.PersonTypeFlag==0 Then begin
    EPEmpr.EmpTypeFlag = 1;
  End;
  EPEmpVcRecordImport= res;
return;
end;
